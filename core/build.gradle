dependencies {
    compile(
            "com.alibaba:fastjson:1.2.31",
            "org.reflections:reflections:0.9.11",
            "org.slf4j:slf4j-api:1.7.25"
    )

    testCompile(
            "junit:junit:4.12"
    )
}

jar {
    appendix = "core"
}

task sourceJar(type: Jar) {
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "Pojo"
            name "Pojo Zhang"
            email "pojo.zhang@gmail.com"
        }
    }

    scm {
        url "https://github.com/pojozhang/aloha"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            groupId 'io.bayberry.aloha'
            artifactId 'core'
            version '1.0-alpha'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'an event bus on Java platform')
                root.appendNode('name', 'aloha')
                root.appendNode('url', 'https://github.com/pojozhang/aloha')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = 'pojozhang'
    key = '3e5a8d552d0a4e387ebdcf57cc4befc368c5da3d'
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = 'maven'
        name = 'io.bayberry.aloha'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/pojozhang/aloha.git'
        labels = ['event bus', 'spring']
        version {
            name = '1.0-alpha'
            desc = 'Aloha event bus 1.0-alpha'
            released = new Date()
            vcsTag = '1.0-alpha'
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true

            }
        }
    }
}